# デッキドラフトのnote
## おおざっぱなルール
とりあえず20枚の組にする。これをパイルと呼ぶ。
内訳はモンスター10枚、魔法5枚、トラップ5枚とする。
そのうち1枚は強いカードレア枠とする。

パイルを1つ選び。順番を決める。　// ここでパイルの中の1枚だけオープンにしておくとかすると面白いかも
パイルの中から1枚を選び、残りを次の人に渡す。
パイルが終わったら次のパイルを選び同じように回してゆく
これを繰り返して各個人の手札が60枚になるようになったら終わり。

自分の持っている60枚の中から最低40枚のメインデッキとエクストラデッキを作って対戦です。

## 必要な画面
### ロビー画面
ここではドラフトの設定と準備町を行う。

### ピック画面
パイルに残っているカードの名前とその効果を確認できるようにする
自分の今まで選んだカードの名前とその効果を確認できるようにする。
次の選択者の表示する。
// 出来ればメインデッキの枚数が40枚以下になるようなピックは出来ないようにしたい。

### ダウンロード画面
出来れば.ydkファイルに入れるようにする。

## カードプール候補
- 拾い物
http://frontscape.seesaa.net/article/445095313.html?seesaa_related=category
- ブースターパック
- 拾い物ツイート
https://twitter.com/tokyo_yugioh_cs/status/881407321124950016
拾い物いくつかある
http://lambdadraft.blog.fc2.com/blog-entry-4.html

## サーバー関連

### サーバーが持っているデータ

- 部屋のidとkey
- 部屋の状態　人数集め中かピック中、終わり
- プレイヤー人数、名前
- 全てのパックのカードid
- 今のターンプレイヤー
- プレイヤーのピック順
- 現在何パック目か

### サーバーがするべき処理
###### メニュー画面用
- 部屋の確認
GET /room/<str:room_pass>
response: exist, waigint or wroking, player_name, player_id

- 部屋の作成
POST /room/<str:room_pass>
value:pack_ids, player_num
response: room_key, player_id

- 部屋に入る
PUT /room/<str:room_pass>/
value: key, player_name
response: key is ok or not

### 待機状態
- 準備OK
PUT /ready/<str:room_pass>/
value: key
response: player_list and is_ready

- 待機状態確認
GET /ready/<str:room_pass>/
respnse player_list and is_ready

####ピック時用
- 部屋の状態を確認して必要な情報をもらう
POST /check_room/<int:room_id>/<int:player_id>/
value: key
response: check key and return pack_id and turn_player and player_order

- 選んだカードを知らせる
POST /pick/<str:room_pass>/<int:player_id>/
value: key, card_id
response: return if it is accepted? and pack_id and turn_player and player_order
最後のカードなら部屋を壊す。



